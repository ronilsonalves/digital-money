spring:
  application:
    name: account-service

  datasource:
    url: jdbc:mysql://localhost:3307/account-service?allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true&serverTimezone=UTC-3&useSSL=false
    username: account-service
    password: account-service
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
    generate-ddl: true
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          keycloak-registration:
            provider: keycloak-provider
            client-id: ${CLIENT_ID_BACKEND}
            authorization-grant-type: client_credentials
            client-secret: ${CLIENT_SECRET_BACKEND}
        provider:
          keycloak-provider:
            token-uri: ${REALM_TOKEN_URI}
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

server:
  port: 8082

info:
  app:
    name: ${spring.application.name}
    version: 0.0.1
    description: Account's service
  svc:
    port: ${server.port}

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

digitalmoney:
  keycloak:
    realm: digitalmoney
    serverUrl: http://localhost:8070/
    clientId: ${CLIENT_ID_BACKEND}
    clientSecret: ${CLIENT_SECRET_BACKEND}
    usersInfoEndpoint: "${digitalmoney.keycloak.serverUrl}/realms/${digitalmoney.keycloak.realm}/protocol/openid-connect/userinfo"

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.http: DEBUG
    org.springdoc: WARN

springdoc:
  swagger-ui:
    oauth:
      client-id: ${CLIENT_ID_BACKEND}
      client-secret: ${CLIENT_SECRET_BACKEND}